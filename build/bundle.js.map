{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Cell.svelte","../../src/ButtonGroup.svelte","../../src/utils/getID.js","../../src/Cell.js","../../src/utils/getRandomInteger.js","../../src/utils/getRowColumn.js","../../src/core/getNeighbors.js","../../src/core/randomlyAssignMines.js","../../src/Board.js","../../src/config.js","../../src/utils/isMined.js","../../src/core/handleFirstOpenChartletBoom.js","../../src/core/handle22Layer.js","../../src/core/handleInfosLayer.js","../../src/core/handleLogoLayer.js","../../src/core/handleCellOpen.js","../../src/MineSweeper.svelte","../../src/core/preloadImages.js","../../src/core/calculateNeighborMineCounts.js","../../src/core/handleCellFlag.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  import { beforeUpdate, createEventDispatcher } from \"svelte\";\n\n  export let id;\n  export let row;\n  export let column;\n  export let opened;\n  export let flagged;\n  export let mined;\n  export let neighborMineCount;\n  export let disabled;\n  export let chartleted;\n  export let gameOver;\n\n  export let currentCell;\n\n  const dispatch = createEventDispatcher();\n\n  let selected = currentCell && currentCell.id === id;\n  beforeUpdate(() => {\n    selected = currentCell && currentCell.id === id;\n  });\n\n  function handleCellClick() {\n    dispatch(\"click\", {\n      id,\n      row,\n      column,\n      opened,\n      flagged,\n      mined,\n      neighborMineCount,\n      disabled,\n      chartleted\n    });\n  }\n</script>\n\n{#if disabled}\n  <div class={[\"cell\"].join(\" \")} {id} />\n  <!-- 这里控制全屏开的逻辑 -->\n{:else if !(opened || (gameOver && mined) || (gameOver && chartleted))}\n  <div\n    class={[\"cell\", selected ? \"selected\" : \"\", flagged ? \"flagged\" : \"\"].join(\n      \" \"\n    )}\n    on:click={handleCellClick}\n    {id}\n  />\n{:else}\n  <div\n    class={[\n      \"cell\",\n      \"opened\",\n      !neighborMineCount || neighborMineCount == 0 ? \"transparent\" : \"\",\n      mined ? \"mined\" : \"\",\n      chartleted ? \"chartleted\" : \"\"\n    ].join(\" \")}\n    {id}\n  >\n    {mined || neighborMineCount == 0 ? \"\" : neighborMineCount}\n  </div>\n{/if}\n\n<style>\n  .cell {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n\n    font-size: 45px;\n\n    width: 65px;\n    height: 65px;\n\n    box-sizing: border-box;\n\n    border: 0.6px solid #000;\n    background-color: #f96414;\n\n    vertical-align: middle;\n\n    position: relative;\n    z-index: 50;\n  }\n  .cell.flagged::after {\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 60;\n    background-image: url(\"../images/flagg.png\");\n  }\n  .cell.selected.flagged::after {\n    background-image: url(\"../images/flagga.png\");\n  }\n  .cell.opened {\n    background-color: #fff;\n  }\n  .cell.opened.transparent {\n    background-color: transparent;\n  }\n  .cell.opened.transparent.mined {\n    background-color: #fff;\n  }\n  .cell.opened.transparent.chartleted,\n  .cell.opened.chartleted {\n    background-color: #fff;\n    z-index: 1;\n  }\n  @keyframes sparkle {\n    from {\n      background-image: url(\"../images/minee.png\");\n    }\n    to {\n      background-image: url(\"../images/mineea.png\");\n    }\n  }\n  .cell.opened.mined {\n    background-image: url(\"../images/minee.png\");\n    background-size: 65px;\n    background-color: #fff;\n    animation: sparkle 0.5s infinite;\n  }\n  .cell.opened.selected.mined {\n    background-image: url(\"../images/mineea.png\");\n  }\n  .cell.selected {\n    background-color: #000;\n  }\n</style>\n","<script>\n  import { beforeUpdate, createEventDispatcher } from \"svelte\";\n\n  export let mineCount;\n  export let flagCount;\n  export let currentCell;\n  export let prewined;\n  export let helped;\n  let mined;\n\n  beforeUpdate(() => {\n    mined = currentCell && currentCell.mined;\n  });\n\n  const dispatch = createEventDispatcher();\n\n  function handleButtonClickOpen() {\n    dispatch(\"open\");\n  }\n  function handleButtonClickFlag() {\n    dispatch(\"flag\");\n  }\n  function handleButtonClickHelp() {\n    dispatch(\"help\");\n  }\n  function handleButtonClickRestart() {\n    dispatch(\"restart\");\n  }\n  function handleButtonClickNext() {\n    dispatch(\"next\");\n  }\n\n  function formatMineCount(mineCount) {\n    return (\"000\" + mineCount).slice(-3);\n  }\n</script>\n\n<div class=\"button-group\">\n  <div class=\"minecount\">{formatMineCount(mineCount - flagCount)}</div>\n  <div class=\"open\" on:click={handleButtonClickOpen}>\n    <div\n      class=\"audio-wrap\"\n      style={`z-index: ${!helped && prewined ? 69 : -100};`}\n    >\n      <audio preload=\"auto\">\n        <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/gamewin.mp3\" preload=\"auto\" />\n        <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/gamewin.ogg\" preload=\"auto\" />\n      </audio>\n    </div>\n    <div\n      class=\"audio-wrap\"\n      style={`z-index: ${!helped && mined && !prewined ? 69 : -100};`}\n    >\n      <audio preload=\"auto\">\n        <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/gameover.mp3\" preload=\"auto\" />\n        <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/gameover.ogg\" preload=\"auto\" />\n      </audio>\n    </div>\n    <div\n      class=\"audio-wrap\"\n      style={`z-index: ${helped || (!mined && !prewined) ? 69 : -100};`}\n    >\n      <audio preload=\"auto\">\n        <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/open.mp3\" preload=\"auto\" />\n        <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/open.ogg\" preload=\"auto\" />\n      </audio>\n    </div>\n  </div>\n  <div class=\"flag\" on:click={handleButtonClickFlag}>\n    <div\n      class=\"audio-wrap\"\n      style={`z-index: ${!helped && prewined ? 69 : -100};`}\n    >\n      <audio preload=\"auto\">\n        <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/gamewin.mp3\" preload=\"auto\" />\n        <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/gamewin.ogg\" preload=\"auto\" />\n      </audio>\n    </div>\n    <div\n      class=\"audio-wrap\"\n      style={`z-index: ${helped || !prewined ? 69 : -100};`}\n    >\n      <audio preload=\"auto\">\n        <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/flag.mp3\" preload=\"auto\" />\n        <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/flag.ogg\" preload=\"auto\" />\n      </audio>\n    </div>\n  </div>\n  <div class=\"help\" on:click={handleButtonClickHelp}>\n    <audio preload=\"auto\">\n      <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/help.mp3\" preload=\"auto\" />\n      <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/help.ogg\" preload=\"auto\" />\n    </audio>\n  </div>\n  <div class=\"restart\" on:click={handleButtonClickRestart}>\n    <audio preload=\"auto\">\n      <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/click.mp3\" preload=\"auto\" />\n      <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/click.ogg\" preload=\"auto\" />\n    </audio>\n  </div>\n  <div class=\"next\" on:click={handleButtonClickNext}>\n    <audio preload=\"auto\">\n      <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/click.mp3\" preload=\"auto\" />\n      <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/click.ogg\" preload=\"auto\" />\n    </audio>\n  </div>\n</div>\n\n<style>\n  .button-group {\n    height: 60px;\n    display: flex;\n    justify-content: space-between;\n    outline: 0.6px solid #000;\n  }\n  .button-group > div {\n    display: inline-block;\n    height: 60px;\n    background-repeat: no-repeat;\n    box-sizing: border-box;\n    position: relative;\n  }\n  .button-group > div :global(.audiojs .play-pause) {\n    width: 100%;\n    height: 100%;\n  }\n  .button-group > div .audio-wrap,\n  .button-group > div :global(.audiojs) {\n    position: absolute;\n    opacity: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n  .button-group > div.minecount {\n    color: #000;\n    font-size: 45px;\n    line-height: 60px;\n    padding-left: 63px;\n    width: 163px;\n\n    background-image: url(\"../images/minecount.png\");\n  }\n  .button-group > div.open {\n    width: 162px;\n    background-image: url(\"../images/open.png\");\n  }\n  .button-group > div.open:active {\n    background-image: url(\"../images/opened.png\");\n  }\n  .button-group > div.flag {\n    width: 163px;\n    background-image: url(\"../images/flag.png\");\n  }\n  .button-group > div.flag:active {\n    background-image: url(\"../images/flagged.png\");\n  }\n  .button-group > div.help {\n    width: 162px;\n    background-image: url(\"../images/help.png\");\n  }\n  .button-group > div.help:active {\n    background-image: url(\"../images/helped.png\");\n  }\n  .button-group > div.restart {\n    width: 195px;\n    background-image: url(\"../images/restart.png\");\n  }\n  .button-group > div.restart:active {\n    background-image: url(\"../images/restarted.png\");\n  }\n  .button-group > div.next {\n    width: 195px;\n    background-image: url(\"../images/next.png\");\n  }\n  .button-group > div.next:active {\n    background-image: url(\"../images/nexted.png\");\n  }\n</style>\n","export default function getID(row, column) {\n  return `${row}/${column}`;\n}\n","import getID from \"./utils/getID.js\";\n\nexport default function Cell({ row, column, ...props }) {\n  return {\n    id: getID(row, column),\n    row: row,\n    column: column,\n    ...props\n  };\n}\n","export default function getRandomInteger(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n","export default function getRowColumn(id) {\n  const [row, column] = id.split(\"/\");\n  return { row, column };\n}\n","import getID from \"../utils/getID\";\nimport getRowColumn from \"../utils/getRowColumn\";\n\nexport default function getNeighbors(id, boardConfig) {\n  let { row, column } = getRowColumn(id);\n  row = parseInt(row);\n  column = parseInt(column);\n  const neighbors = [];\n  neighbors.push(getID(row - 1, column - 1));\n  neighbors.push(getID(row - 1, column));\n  neighbors.push(getID(row - 1, column + 1));\n  neighbors.push(getID(row, column - 1));\n  neighbors.push(getID(row, column + 1));\n  neighbors.push(getID(row + 1, column - 1));\n  neighbors.push(getID(row + 1, column));\n  neighbors.push(getID(row + 1, column + 1));\n\n  const { rows, columns } = boardConfig;\n  for (let i = 0; i < neighbors.length; i++) {\n    let { row: r, column: c } = getRowColumn(neighbors[i]);\n    if (r < 0 || c < 0 || r >= rows || c >= columns) {\n      neighbors.splice(i, 1);\n      i--;\n    }\n  }\n\n  return neighbors;\n}\n","import getID from \"../utils/getID\";\nimport getRandomInteger from \"../utils/getRandomInteger\";\nimport getRowColumn from \"../utils/getRowColumn\";\nimport getNeighbors from \"./getNeighbors\";\n\nfunction findCellNeighborsChartleted(cell, board, boardConfig) {\n  const neighbors = getNeighbors(cell.id, boardConfig);\n  for (let i = 0; i < neighbors.length; i++) {\n    const { row, column } = getRowColumn(neighbors[i]);\n    const neighbor = board[row][column];\n    if (typeof neighbor !== \"undefined\" && neighbor.chartleted) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default function randomlyAssignMines(board, boardConfig) {\n  const { rows, columns, mineCount, startRow } = boardConfig;\n  const mineCooridinates = [];\n  for (let i = 0; i < mineCount; i++) {\n    let row = getRandomInteger(0, rows);\n    let column = getRandomInteger(0, columns);\n    let cellId = getID(row, column);\n    let cell = board[row][column];\n    while (\n      mineCooridinates.includes(cellId) ||\n      cell.disabled ||\n      cell.chartleted ||\n      findCellNeighborsChartleted(cell, board, boardConfig)\n    ) {\n      row = getRandomInteger(0, rows);\n      column = getRandomInteger(0, columns);\n      cellId = getID(row, column);\n      cell = board[row][column];\n    }\n    mineCooridinates.push(cellId);\n    board[row][column].mined = true;\n  }\n  return board;\n}\n","import Cell from \"./Cell\";\nimport randomlyAssignMines from \"./core/randomlyAssignMines.js\";\nimport getRandomInteger from \"./utils/getRandomInteger\";\n\nexport default function Board(boardConfig) {\n  const { rows, columns, startRow, mineCount } = boardConfig;\n  let board = [];\n  for (let row = 0; row < rows; row++) {\n    for (let column = 0; column < columns; column++) {\n      board[row] = board[row] || [];\n      board[row][column] = Cell({\n        row: startRow + row, // 行\n        column, // 列\n        opened: false, // 是否被翻开\n        flagged: false, // 是否被插旗标记\n        mined: false, // 是否是雷\n        neighborMineCount: 0, // 周围九宫格雷数\n        disabled: false, // 是否被禁用\n        chartleted: false // 是否是贴图一部分\n      });\n    }\n  }\n  return board;\n}\n","export const COLUMNES = 16;\nexport const TOP_ROWS = 10;\nexport const MIDDLE_ROWS = 9;\nexport const BOTTOM_ROWS = 9;\nexport const TOP_MINECOUNT = 12;\nexport const MIDDLE_MINECOUNT = 10;\nexport const BOTTOM_MINECOUNT = 10;\nexport const CHARTLET_ROWS = 3;\nexport const CHARTLET_COLUMNES = 6;\nexport const CELLPX = 65;\n\nconst boardConfig = {\n  startRow: 0,\n  rows: TOP_ROWS + MIDDLE_ROWS + BOTTOM_ROWS,\n  columns: COLUMNES,\n  mineCount: TOP_MINECOUNT + MIDDLE_MINECOUNT + BOTTOM_MINECOUNT\n};\n\nexport const topBoardConfig = {\n  startRow: 0,\n  rows: TOP_ROWS,\n  columns: COLUMNES,\n  mineCount: TOP_MINECOUNT\n};\n\nexport const middleBoardConfig = {\n  startRow: TOP_ROWS,\n  rows: MIDDLE_ROWS,\n  columns: COLUMNES,\n  mineCount: MIDDLE_MINECOUNT\n};\n\nexport const bottomBoardConfig = {\n  startRow: TOP_ROWS + MIDDLE_ROWS,\n  rows: BOTTOM_ROWS,\n  columns: COLUMNES,\n  mineCount: BOTTOM_MINECOUNT\n};\n\nexport default boardConfig;\n","import getRowColumn from \"./getRowColumn.js\";\n\nexport default function isMined(board, id) {\n  const { row, column } = getRowColumn(id);\n  const cell = board[row][column];\n  let mined = 0;\n  if (typeof cell !== \"undefined\") {\n    mined = cell.mined ? 1 : 0;\n  }\n  return mined;\n}\n","import Cell from \"../Cell\";\nimport {\n  BOTTOM_ROWS,\n  CELLPX,\n  COLUMNES,\n  MIDDLE_ROWS,\n  TOP_ROWS\n} from \"../config\";\nimport getRandomInteger from \"../utils/getRandomInteger\";\nimport getRowColumn from \"../utils/getRowColumn\";\n\nfunction handleFirstOpenChartletBoom(currentCell, board, positions) {\n  const { row, column } = getRowColumn(currentCell.id);\n  const {\n    regionTopChartletPosition,\n    regionMiddleChartletPosition,\n    regionBottomChartletPosition\n  } = positions;\n  let region;\n  if (row < TOP_ROWS) {\n    // 顶部 0 - 9 (10)\n    region = \"TOP\";\n    handleBoomChartletTop(currentCell, board, positions);\n    handleRandomPlaceChartletMiddle(board, positions);\n    handleRandomPlaceChartletBottom(board, positions);\n  } else if (row < TOP_ROWS + MIDDLE_ROWS) {\n    // 中部 10 - 18 (9)\n    region = \"MIDDLE\";\n    handleBoomChartletMiddle(currentCell, board, positions);\n    handleRandomPlaceChartletTop(board, positions);\n    handleRandomPlaceChartletBottom(board, positions);\n  } else if (row < TOP_ROWS + MIDDLE_ROWS + BOTTOM_ROWS) {\n    // 底部 19 - 27 (9)\n    region = \"BOTTOM\";\n    handleBoomChartletBottom(currentCell, board, positions);\n    handleRandomPlaceChartletTop(board, positions);\n    handleRandomPlaceChartletMiddle(board, positions);\n  }\n}\n\nexport function handleBoomChartletTop(\n  currentCell,\n  board,\n  { regionTopChartletPosition }\n) {\n  // 顶部 0 - 9 (10)\n  // 3 x 6\n  let { row, column } = getRowColumn(currentCell.id);\n  row = parseInt(row);\n  column = parseInt(column);\n  const topLeftPosition = { row: row - 1, column: column - 2 };\n  const topRightPosition = { row: row - 1, column: column + 3 };\n  const bottomLeftPosition = { row: row + 1, column: column - 2 };\n  const bottomRightPosition = { row: row + 1, column: column + 3 };\n  const moved = { row: 0, column: 0 };\n  // 上越界\n  if (topLeftPosition.row < 0) {\n    moved.row = -topLeftPosition.row;\n  }\n  // 下越界\n  if (bottomLeftPosition.row > 9) {\n    moved.row = -(bottomLeftPosition.row - 9);\n  }\n  // 左越界\n  if (topLeftPosition.column < 0) {\n    moved.column = -topLeftPosition.column;\n  }\n  // 右越界\n  if (topRightPosition.column > 15) {\n    moved.column = -(topRightPosition.column - 15);\n  }\n  topLeftPosition.row += moved.row;\n  topLeftPosition.column += moved.column;\n\n  topRightPosition.row += moved.row;\n  topRightPosition.column += moved.column;\n  // 22贴图\n  if (\n    topRightPosition.column > 13 /* 14 15 */ &&\n    topRightPosition.row < 2 /* 0 1 */\n  ) {\n    if (column <= 13 && row >= 2) {\n      topLeftPosition.row += 2 - topRightPosition.row;\n      topLeftPosition.column += 13 - topRightPosition.column;\n    } else if (column <= 13 && row < 2) {\n      topLeftPosition.column += 13 - topRightPosition.column;\n    } else if (column > 13 && row >= 2) {\n      topLeftPosition.row += 2 - topRightPosition.row;\n    }\n  }\n  handlePlaceChartlet(board, topLeftPosition, regionTopChartletPosition, {\n    chartletRows: 3,\n    chartletColumns: 6\n  });\n}\n\nexport function handleBoomChartletMiddle(\n  currentCell,\n  board,\n  { regionMiddleChartletPosition }\n) {\n  // 中部 10 - 18 (9)\n  // 4 x 5\n  let { row, column } = getRowColumn(currentCell.id);\n  row = parseInt(row);\n  column = parseInt(column);\n  const topLeftPosition = { row: row - 1, column: column - 2 };\n  const topRightPosition = { row: row - 1, column: column + 2 };\n  const bottomLeftPosition = { row: row + 2, column: column - 2 };\n  const bottomRightPosition = { row: row + 2, column: column + 2 };\n  const moved = { row: 0, column: 0 };\n  // 上越界\n  if (topLeftPosition.row < 10) {\n    moved.row = -(topLeftPosition.row - 10);\n  }\n  // 下越界\n  if (bottomLeftPosition.row > 18) {\n    moved.row = -(bottomLeftPosition.row - 18);\n  }\n  // 左越界\n  if (topLeftPosition.column < 0) {\n    moved.column = -topLeftPosition.column;\n  }\n  // 右越界\n  if (topRightPosition.column > 15) {\n    moved.column = -(topRightPosition.column - 15);\n  }\n  topLeftPosition.row += moved.row;\n  topLeftPosition.column += moved.column;\n  handlePlaceChartlet(board, topLeftPosition, regionMiddleChartletPosition, {\n    chartletRows: 4,\n    chartletColumns: 5\n  });\n}\n\nexport function handleBoomChartletBottom(\n  currentCell,\n  board,\n  { regionBottomChartletPosition }\n) {\n  // 底部 19 - 27 (9)\n  // 3 x 8\n  let { row, column } = getRowColumn(currentCell.id);\n  row = parseInt(row);\n  column = parseInt(column);\n  const topLeftPosition = { row: row - 1, column: column - 3 };\n  const topRightPosition = { row: row - 1, column: column + 4 };\n  const bottomLeftPosition = { row: row + 1, column: column - 3 };\n  const bottomRightPosition = { row: row + 1, column: column + 4 };\n  const moved = { row: 0, column: 0 };\n  // 上越界\n  if (topLeftPosition.row < 19) {\n    moved.row = -(topLeftPosition.row - 19);\n  }\n  // 下越界\n  if (bottomLeftPosition.row > 27) {\n    moved.row = -(bottomLeftPosition.row - 27);\n  }\n  // 左越界\n  if (topLeftPosition.column < 0) {\n    moved.column = -topLeftPosition.column;\n  }\n  // 右越界\n  if (topRightPosition.column > 15) {\n    moved.column = -(topRightPosition.column - 15);\n  }\n  topLeftPosition.row += moved.row;\n  topLeftPosition.column += moved.column;\n\n  bottomRightPosition.row += moved.row;\n  bottomRightPosition.column += moved.column;\n  // logo贴图\n  if (\n    bottomRightPosition.column > 11 /* 12 13 14 15 */ &&\n    bottomRightPosition.row > 24 /* 25 26 27 */\n  ) {\n    if (column <= 11 && row <= 24) {\n      topLeftPosition.row += 24 - bottomRightPosition.row;\n      topLeftPosition.column += 11 - bottomRightPosition.column;\n    } else if (column <= 11 && row > 24) {\n      topLeftPosition.column += 11 - bottomRightPosition.column;\n    } else if (column > 11 && row <= 24) {\n      topLeftPosition.row += 24 - bottomRightPosition.row;\n    }\n  }\n  // infos贴图\n  if (\n    bottomLeftPosition.column < 3 /* 0 1 2 */ &&\n    bottomLeftPosition.row > 21 /* 22 23 24 25 26 27 */\n  ) {\n    if (column >= 3 && row <= 21) {\n      topLeftPosition.row += 21 - bottomLeftPosition.row;\n      topLeftPosition.column += 3 - bottomLeftPosition.column;\n    } else if (column >= 3 && row > 21) {\n      topLeftPosition.column += 3 - bottomLeftPosition.column;\n    } else if (column < 3 && row <= 21) {\n      topLeftPosition.row += 21 - bottomLeftPosition.row;\n    }\n  }\n  handlePlaceChartlet(board, topLeftPosition, regionBottomChartletPosition, {\n    chartletRows: 3,\n    chartletColumns: 8\n  });\n}\n\nexport function handlePlaceChartlet(\n  board,\n  topLeftPosition,\n  regionChartletPosition,\n  { chartletRows, chartletColumns }\n) {\n  const { row, column } = topLeftPosition;\n  regionChartletPosition.top = row * CELLPX + \"px\";\n  regionChartletPosition.left = column * CELLPX + \"px\";\n  for (let r = row; r < row + chartletRows; r++) {\n    for (let c = column; c < column + chartletColumns; c++) {\n      board[r][c] = Cell({\n        ...board[r][c],\n        chartleted: true\n      });\n    }\n  }\n}\n\nexport function handleRandomPlaceChartletTop(\n  board,\n  { regionTopChartletPosition }\n) {\n  // 顶部 0 - 9 (10)\n  // 3 x 6\n  const startRow = 0;\n  const endRow = 7; // 7 8 9\n  const startColumn = 0;\n  const endColumn = 8; // 8 9 10 11 12 13 // 排除22插图最后2列 14 15\n  const row = getRandomInteger(startRow, endRow + 1);\n  const column = getRandomInteger(startColumn, endColumn + 1);\n  regionTopChartletPosition.top = row * CELLPX + \"px\";\n  regionTopChartletPosition.left = column * CELLPX + \"px\";\n  for (let r = row; r < row + 3; r++) {\n    for (let c = column; c < column + 6; c++) {\n      board[r][c] = Cell({\n        ...board[r][c],\n        chartleted: true\n      });\n    }\n  }\n}\n\nexport function handleRandomPlaceChartletMiddle(\n  board,\n  { regionMiddleChartletPosition }\n) {\n  // 中部 10 - 18 (9)\n  // 4 x 5\n  const startRow = 10;\n  const endRow = 15; // 15 16 17 18\n  const startColumn = 0;\n  const endColumn = 11; // 11 12 13 14 15\n  const row = getRandomInteger(startRow, endRow + 1);\n  const column = getRandomInteger(startColumn, endColumn + 1);\n  regionMiddleChartletPosition.top = row * CELLPX + \"px\";\n  regionMiddleChartletPosition.left = column * CELLPX + \"px\";\n  for (let r = row; r < row + 4; r++) {\n    for (let c = column; c < column + 5; c++) {\n      board[r][c] = Cell({\n        ...board[r][c],\n        chartleted: true\n      });\n    }\n  }\n}\n\nexport function handleRandomPlaceChartletBottom(\n  board,\n  { regionBottomChartletPosition }\n) {\n  // 底部 19 - 27 (9)\n  // 3 x 8\n  const startRow = 19;\n  const endRow = 25; // 25 26 27\n  const startColumn = 3; // 排除infos插图开始3列 0 1 2\n  const endColumn = 4; // 4 5 6 7 8 9 10 11 // 排除logo插图最后4列 12 13 14 15\n  const row = getRandomInteger(startRow, endRow + 1);\n  const column = getRandomInteger(startColumn, endColumn + 1);\n  regionBottomChartletPosition.top = row * CELLPX + \"px\";\n  regionBottomChartletPosition.left = column * CELLPX + \"px\";\n  for (let r = row; r < row + 3; r++) {\n    for (let c = column; c < column + 8; c++) {\n      board[r][c] = Cell({\n        ...board[r][c],\n        chartleted: true\n      });\n    }\n  }\n}\n\nexport default handleFirstOpenChartletBoom;\n","import getRowColumn from \"../utils/getRowColumn.js\";\nimport Cell from \"../Cell.js\";\n\nconst LAYER22CELLS = [\"0/14\", \"0/15\", \"1/14\", \"1/15\"];\n\nfunction handle22Layer(board) {\n  for (let i = 0; i < LAYER22CELLS.length; i++) {\n    const { row, column } = getRowColumn(LAYER22CELLS[i]);\n    board[row][column] = Cell({\n      ...board[row][column],\n      disabled: true,\n    });\n  }\n  return board;\n}\n\nexport default handle22Layer;\n","import getRowColumn from \"../utils/getRowColumn.js\";\nimport Cell from \"../Cell.js\";\n\nconst LAYERINFOSCELLS = [\n  \"22/0\",\n  \"22/1\",\n  \"22/2\",\n  \"23/0\",\n  \"23/1\",\n  \"23/2\",\n  \"24/0\",\n  \"24/1\",\n  \"24/2\",\n  \"25/0\",\n  \"25/1\",\n  \"25/2\",\n  \"26/0\",\n  \"26/1\",\n  \"26/2\",\n  \"27/0\",\n  \"27/1\",\n  \"27/2\"\n];\n\nfunction handleInfosLayer(board) {\n  for (let i = 0; i < LAYERINFOSCELLS.length; i++) {\n    const { row, column } = getRowColumn(LAYERINFOSCELLS[i]);\n    board[row][column] = Cell({\n      ...board[row][column],\n      disabled: true,\n    });\n  }\n  return board;\n}\n\nexport default handleInfosLayer;\n","import getRowColumn from \"../utils/getRowColumn.js\";\nimport Cell from \"../Cell.js\";\n\nconst LAYERLOGOCELLS = [\n  \"25/12\",\n  \"25/13\",\n  \"25/14\",\n  \"25/15\",\n  \"26/12\",\n  \"26/13\",\n  \"26/14\",\n  \"26/15\",\n  \"27/12\",\n  \"27/13\",\n  \"27/14\",\n  \"27/15\"\n];\n\nfunction handleLogoLayer(board) {\n  for (let i = 0; i < LAYERLOGOCELLS.length; i++) {\n    const { row, column } = getRowColumn(LAYERLOGOCELLS[i]);\n    board[row][column] = Cell({\n      ...board[row][column],\n      disabled: true\n    });\n  }\n  return board;\n}\n\nexport default handleLogoLayer;\n","import getRowColumn from \"../utils/getRowColumn\";\nimport getNeighbors from \"./getNeighbors\";\n\nfunction handleCellOpen(cell, board, { forceUpdateBoard, boardConfig, lose }) {\n  if (cell.opened || cell.disabled || cell.flagged) return;\n  if (cell.mined) {\n    lose();\n    return;\n  }\n  board[cell.row][cell.column].opened = cell.opened = true;\n  if (!cell.neighborMineCount) {\n    const neighbors = getNeighbors(cell.id, boardConfig);\n    for (let i = 0; i < neighbors.length; i++) {\n      const { row, column } = getRowColumn(neighbors[i]);\n      const neighbor = board[row][column];\n      if (\n        typeof neighbor !== \"undefined\" &&\n        !neighbor.opened &&\n        !neighbor.disabled\n      ) {\n        handleCellOpen(neighbor, board, {\n          forceUpdateBoard,\n          boardConfig,\n          lose\n        });\n      }\n    }\n  }\n  forceUpdateBoard();\n}\n\nexport default handleCellOpen;\n","<script>\n  import { beforeUpdate, onMount } from \"svelte\";\n  import CellSvelete from \"./Cell.svelte\";\n  import ButtonGroupSvelte from \"./ButtonGroup.svelte\";\n  import Board from \"./Board.js\";\n  import boardConfig, {\n    topBoardConfig,\n    middleBoardConfig,\n    bottomBoardConfig\n  } from \"./config.js\";\n  import calculateNeighborMineCounts from \"./core/calculateNeighborMineCounts.js\";\n  import handleFirstOpenChartletBoom from \"./core/handleFirstOpenChartletBoom.js\";\n  import handle22Layer from \"./core/handle22Layer.js\";\n  import handleInfosLayer from \"./core/handleInfosLayer.js\";\n  import handleLogoLayer from \"./core/handleLogoLayer.js\";\n  import handleCellOpen from \"./core/handleCellOpen.js\";\n  import handleCellFlag from \"./core/handleCellFlag.js\";\n  import getRandomInteger from \"./utils/getRandomInteger\";\n  import randomlyAssignMines from \"./core/randomlyAssignMines.js\";\n  import preloadImages from \"./core/preloadImages.js\";\n\n  // vars ------------------------------\n  let zoom = 1;\n  export let mineCount;\n  export let bgs;\n  let flagCount = 0;\n  let currentCell = null;\n  let boardTop = [];\n  let boardMiddle = [];\n  let boardBottom = [];\n  let flagFirstOpen = true;\n  let gameOver = false;\n  let losed = false;\n  let wined = false;\n  let prewined = false;\n  let showuped = false;\n  let started = false;\n  let helped = false;\n  let regionTopChartletPosition = { top: 0, left: \"-780px\" };\n  let regionMiddleChartletPosition = { top: 0, left: \"-780px\" };\n  let regionBottomChartletPosition = { top: 0, left: \"-780px\" };\n\n  let refShowup = null;\n  // END vars ------------------------------\n\n  try {\n    zoom = window.screen.width < 1080 ? window.screen.width / 1080 : 1;\n  } catch (err) {\n    // do nothing\n  }\n\n  // helpers ------------------------------\n  function computedBoard() {\n    return [...boardTop, ...boardMiddle, ...boardBottom];\n  }\n  function forceUpdateBoard() {\n    boardTop = boardTop;\n    boardMiddle = boardMiddle;\n    boardBottom = boardBottom;\n  }\n  function forceUpdateChartletPosition() {\n    regionTopChartletPosition = regionTopChartletPosition;\n    regionMiddleChartletPosition = regionMiddleChartletPosition;\n    regionBottomChartletPosition = regionBottomChartletPosition;\n  }\n  // END helpers ------------------------------\n\n  // handleCellClick ------------------------------\n  function clicked() {\n    try {\n      refShowup.play();\n    } catch (err) {\n      // do nothing..\n    }\n  }\n\n  function handleCellClick(cell) {\n    if (gameOver || cell.disabled || cell.opened) return;\n    if (currentCell && currentCell.id === cell.id) {\n      currentCell = null;\n      return;\n    }\n    currentCell = cell;\n    if (!flagFirstOpen) {\n      preJudgeWin();\n    }\n  }\n  function handleCellClickTop(event) {\n    const { detail: cell } = event;\n    clicked();\n    handleCellClick(cell);\n  }\n  function handleCellClickMiddle(event) {\n    const { detail: cell } = event;\n    clicked();\n    handleCellClick(cell);\n  }\n  function handleCellClickBottom(event) {\n    const { detail: cell } = event;\n    clicked();\n    handleCellClick(cell);\n  }\n  // END handleCellClick ------------------------------\n\n  // handleButtonClick ------------------------------\n  function handleButtonClickOpen(event) {\n    if (gameOver || !showuped || !started || helped) return;\n    if (currentCell) {\n      if (flagFirstOpen) {\n        flagFirstOpen = false;\n        // 第1次翻开，需要炸开第1张贴图，并把剩余2张贴图随机放置\n        handleFirstOpenChartletBoom(currentCell, computedBoard(), {\n          regionTopChartletPosition,\n          regionMiddleChartletPosition,\n          regionBottomChartletPosition\n        });\n        forceUpdateChartletPosition();\n        randomlyAssignMines(computedBoard(), { ...boardConfig, mineCount });\n        calculateNeighborMineCounts(computedBoard(), boardConfig);\n        forceUpdateBoard();\n      }\n      handleCellOpen(currentCell, computedBoard(), {\n        forceUpdateBoard,\n        boardConfig,\n        lose\n      });\n      judgeWin();\n    }\n  }\n  function handleButtonClickFlag(event) {\n    if (gameOver || flagFirstOpen || !showuped || !started || helped) return;\n    if (currentCell) {\n      if (!currentCell.flagged && flagCount >= mineCount) return;\n      handleCellFlag(currentCell, computedBoard(), {\n        forceUpdateBoard,\n        boardConfig,\n        flagged\n      });\n      judgeWin();\n    }\n  }\n  function handleButtonClickHelp(event) {\n    if (!showuped || !started) return;\n    helped = !helped;\n  }\n  function handleLayerHelpClick() {\n    if (!showuped || !started) return;\n    helped = false;\n  }\n  function handleLayerShowupClick() {\n    showup();\n  }\n  function handleLayerStartClick() {\n    start();\n  }\n  function handleButtonClickRestart(event) {\n    if (!showuped || !started || helped) return;\n    newGame();\n  }\n  function handleButtonClickNext(event) {\n    console.log(\"next\");\n  }\n  // END handleButtonClick ------------------------------\n\n  beforeUpdate(() => {\n    console.log(\"app\", computedBoard());\n  });\n\n  // newGame && lose ------------------------------\n  function showup() {\n    showuped = true;\n  }\n  function start() {\n    started = true;\n  }\n  function lose() {\n    gameOver = true;\n    setTimeout(() => {\n      losed = true;\n    }, 3000);\n  }\n  function win() {\n    gameOver = true;\n    wined = true;\n  }\n  function prewin() {\n    prewined = true;\n  }\n  function flagged(flag) {\n    flagCount = flagCount + (flag ? +1 : -1);\n  }\n  function preJudgeWin() {\n    const board = computedBoard();\n    const unopenedCells = [];\n    for (let r = 0; r < board.length; r++) {\n      for (let c = 0; c < board[r].length; c++) {\n        const cell = board[r][c];\n        if (!cell.opened) {\n          unopenedCells.push(cell);\n        }\n      }\n    }\n    if (currentCell) {\n      let curCellIndex = unopenedCells.findIndex(\n        (cell) => cell.id === currentCell.id\n      );\n      if (curCellIndex > -1) {\n        unopenedCells.splice(curCellIndex, 1);\n      }\n    }\n\n    let winNoLeftMines = true;\n    unopenedCells.forEach((cell) => {\n      if (!cell.mined && !cell.disabled) {\n        winNoLeftMines = false;\n      }\n    });\n    let winMarkFlags = true;\n    unopenedCells.forEach((cell) => {\n      if ((cell.flagged && !cell.mined) || (!cell.flagged && cell.mined)) {\n        winMarkFlags = false;\n      }\n    });\n\n    console.log(\"pppp\", winMarkFlags, winNoLeftMines);\n\n    if (winNoLeftMines || winMarkFlags) {\n      prewin();\n    }\n    return winNoLeftMines || winMarkFlags;\n  }\n  function judgeWin() {\n    const board = computedBoard();\n    const unopenedCells = [];\n    for (let r = 0; r < board.length; r++) {\n      for (let c = 0; c < board[r].length; c++) {\n        const cell = board[r][c];\n        if (!cell.opened) {\n          unopenedCells.push(cell);\n        }\n      }\n    }\n    let winNoLeftMines = true;\n    unopenedCells.forEach((cell) => {\n      if (!cell.mined && !cell.disabled) {\n        winNoLeftMines = false;\n      }\n    });\n    let winMarkFlags = true;\n    unopenedCells.forEach((cell) => {\n      if ((cell.flagged && !cell.mined) || (!cell.flagged && cell.mined)) {\n        winMarkFlags = false;\n      }\n    });\n    if (winNoLeftMines || winMarkFlags) {\n      win();\n    }\n    return winNoLeftMines || winMarkFlags;\n  }\n  function newGame() {\n    // mineCount = boardConfig.mineCount;\n    flagCount = 0;\n    boardTop = Board({\n      ...topBoardConfig,\n      mineCount: 0\n    });\n    boardMiddle = Board({\n      ...middleBoardConfig,\n      mineCount: 0\n    });\n    boardBottom = Board({\n      ...bottomBoardConfig,\n      mineCount: 0\n    });\n    flagFirstOpen = true;\n    gameOver = false;\n    losed = false;\n    wined = false;\n    prewined = false;\n    // showuped = false;\n    // started = false;\n    helped = false;\n    currentCell = null;\n    regionTopChartletPosition = { top: 0, left: \"-780px\" };\n    regionMiddleChartletPosition = { top: 0, left: \"-780px\" };\n    regionBottomChartletPosition = { top: 0, left: \"-780px\" };\n    // 对22、infos、logo图片覆盖的格子做特殊化处理\n    handle22Layer(computedBoard());\n    handleInfosLayer(computedBoard());\n    handleLogoLayer(computedBoard());\n    forceUpdateBoard();\n  }\n  onMount(() => {\n    try {\n      audiojs.events.ready(function () {\n        var as = audiojs.createAll();\n      });\n    } catch (err) {\n      // do nothing...\n    }\n    newGame();\n  });\n  // END newGame && lose ------------------------------\n  preloadImages();\n</script>\n\n<div class=\"container\" style={`${zoom < 1 ? \"margin: 0 auto\" : \"\"}`}>\n  <div\n    class=\"board\"\n    style={`background-image: url(https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/bg${getRandomInteger(1, 6)}${\n      bgs ? \"s\" : \"\"\n    }.png);`}\n  >\n    <div\n      class=\"chartlet top\"\n      style={`background-image: url(https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartlettop${getRandomInteger(\n        1,\n        6\n      )}.png);top: ${regionTopChartletPosition.top};left: ${\n        regionTopChartletPosition.left\n      }`}\n    />\n    <div\n      class=\"chartlet middle\"\n      style={`background-image: url(https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartletmiddle${getRandomInteger(\n        1,\n        6\n      )}.png);top: ${regionMiddleChartletPosition.top};left: ${\n        regionMiddleChartletPosition.left\n      }`}\n    />\n    <div\n      class=\"chartlet bottom\"\n      style={`background-image: url(https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartletbottom${getRandomInteger(\n        1,\n        6\n      )}.png);top: ${regionBottomChartletPosition.top};left: ${\n        regionBottomChartletPosition.left\n      }`}\n    />\n    <div class=\"layer number22\" />\n    <div class=\"layer infos\" />\n    <div class=\"layer logo\" />\n    <div\n      class=\"start\"\n      on:click={handleLayerStartClick}\n      style={`opacity: ${started ? 0 : 1};z-index: ${started ? -100 : 499}`}\n    >\n      <img class=\"start\" alt=\"\" src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/start.png\" />\n      <audio preload=\"auto\" loop=\"loop\">\n        <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/bgm.mp3\" loop=\"loop\" preload=\"auto\" />\n        <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/bgm.ogg\" loop=\"loop\" preload=\"auto\" />\n      </audio>\n    </div>\n    <div\n      class=\"showup\"\n      on:click={handleLayerShowupClick}\n      style={`opacity: ${showuped ? 0 : 1};z-index: ${showuped ? -100 : 399}`}\n    >\n      <img class=\"showup\" alt=\"\" src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/showup.gif\" />\n      <audio preload=\"auto\" bind:this={refShowup}>\n        <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/click.mp3\" preload=\"auto\" />\n        <source src=\"https://superjobs.oss-cn-beijing.aliyuncs.com/public/audios/click.ogg\" preload=\"auto\" />\n      </audio>\n    </div>\n    {#if helped}\n      <div class=\"helped\" on:click={handleLayerHelpClick} />\n    {/if}\n    {#if losed}\n      <div class=\"losed\" />\n    {:else if wined}\n      <div class=\"wined\" />\n    {/if}\n    {#each boardTop as row}\n      {#each row as column (column.id)}\n        <CellSvelete\n          {gameOver}\n          {currentCell}\n          on:click={handleCellClickTop}\n          {...column}\n        />\n      {/each}\n      <br />\n    {/each}\n    {#each boardMiddle as row}\n      {#each row as column (column.id)}\n        <CellSvelete\n          {gameOver}\n          {currentCell}\n          on:click={handleCellClickMiddle}\n          {...column}\n        />\n      {/each}\n      <br />\n    {/each}\n    {#each boardBottom as row}\n      {#each row as column (column.id)}\n        <CellSvelete\n          {gameOver}\n          {currentCell}\n          on:click={handleCellClickBottom}\n          {...column}\n        />\n      {/each}\n      <br />\n    {/each}\n    <ButtonGroupSvelte\n      {mineCount}\n      {flagCount}\n      {currentCell}\n      {prewined}\n      {helped}\n      on:open={handleButtonClickOpen}\n      on:flag={handleButtonClickFlag}\n      on:help={handleButtonClickHelp}\n      on:restart={handleButtonClickRestart}\n      on:next={handleButtonClickNext}\n    />\n  </div>\n</div>\n\n<style>\n  .container {\n    user-select: none;\n\n    overflow: hidden;\n\n    background-color: #fff;\n\n    width: 1080px;\n    height: 1920px;\n    box-sizing: border-box;\n\n    margin: 25px auto;\n    padding: 1px;\n  }\n  .container .board {\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: 1040px 1820px;\n\n    font-size: 0;\n\n    margin: 20px 20px 80px;\n\n    outline: 0.6px solid #000;\n\n    width: 1040px;\n    height: 1820px;\n\n    position: relative;\n  }\n  .container .board .start::after {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    background-color: #fff;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n  .container .board .start,\n  .container .board .start img.start,\n  .container .board .showup,\n  .container .board .showup img.showup,\n  .container .board .losed,\n  .container .board .wined,\n  .container .board .helped {\n    z-index: 199;\n\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: 1040px 1820px;\n\n    position: absolute;\n\n    font-size: 0;\n\n    width: 1040px;\n    height: 1820px;\n  }\n  .container .board .showup img.showup {\n    position: relative;\n    z-index: 399;\n  }\n  .container .board .showup :global(.audiojs .play-pause) {\n    width: 100%;\n    height: 100%;\n  }\n  .container .board .showup :global(.audiojs) {\n    position: absolute;\n    opacity: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    z-index: 499;\n  }\n  .container .board .start img.start {\n    position: relative;\n    z-index: 499;\n  }\n  .container .board .start :global(.audiojs .play-pause) {\n    width: 100%;\n    height: 100%;\n  }\n  .container .board .start :global(.audiojs) {\n    position: absolute;\n    opacity: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    z-index: 499;\n  }\n\n  .container .board .helped {\n    z-index: 299;\n    background-image: url(\"../images/helpped.png\");\n  }\n  .container .board .wined {\n    background-image: url(\"../images/wined.png\");\n  }\n  .container .board .losed {\n    background-image: url(\"../images/losed.png\");\n  }\n  .container .board .chartlet {\n    background-repeat: no-repeat;\n    z-index: 10;\n    position: absolute;\n  }\n  .container .board .chartlet.top {\n    /* 3 x 6 */\n    background-size: 390px 195px;\n    height: 195px;\n    width: 390px;\n  }\n  .container .board .chartlet.middle {\n    /* 4 x 5 */\n    background-size: 325px 260px;\n    width: 325px;\n    height: 260px;\n  }\n  .container .board .chartlet.bottom {\n    /* 3 x 8 */\n    background-size: 520px 195px;\n    width: 520px;\n    height: 195px;\n  }\n  .container .board .layer {\n    background-repeat: no-repeat;\n    z-index: 99;\n    position: absolute;\n  }\n  .container .board .number22 {\n    width: 130px;\n    height: 130px;\n\n    background-image: url(\"../images/22.png\");\n    background-position: top right;\n\n    top: 0;\n    right: 0;\n  }\n  .container .board .infos {\n    width: 196.2px;\n    height: 391.2px;\n\n    /* 195px 390px */\n    background-image: url(\"../images/infos.png\");\n    background-position: bottom left;\n    background-size: 196.2px 391.2px;\n\n    bottom: 0px;\n    left: -0.6px;\n  }\n  .container .board .logo {\n    width: 260px;\n    height: 195px;\n\n    background-image: url(\"../images/logo.png\");\n    background-position: bottom right;\n\n    bottom: 0;\n    right: 0;\n  }\n</style>\n","function preloadImages() {\n  setTimeout(() => {\n    // let imgBg1 = new Image();\n    // imgBg1.src = \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/bg1.png\";\n    // let imgBg2 = new Image();\n    // imgBg2.src = \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/bg2.png\";\n    // let imgBg3 = new Image();\n    // imgBg3.src = \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/bg3.png\";\n    // let imgBg4 = new Image();\n    // imgBg4.src = \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/bg4.png\";\n    // let imgBg5 = new Image();\n    // imgBg5.src = \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/bg5.png\";\n\n    let imgBg1s = new Image();\n    imgBg1s.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/bg1s.png\";\n    let imgBg2s = new Image();\n    imgBg2s.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/bg2s.png\";\n    let imgBg3s = new Image();\n    imgBg3s.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/bg3s.png\";\n    let imgBg4s = new Image();\n    imgBg4s.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/bg4s.png\";\n    let imgBg5s = new Image();\n    imgBg5s.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/bg5s.png\";\n\n    let imgCb1 = new Image();\n    imgCb1.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartletbottom1.png\";\n    let imgCb2 = new Image();\n    imgCb2.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartletbottom2.png\";\n    let imgCb3 = new Image();\n    imgCb3.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartletbottom3.png\";\n    let imgCb4 = new Image();\n    imgCb4.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartletbottom4.png\";\n    let imgCb5 = new Image();\n    imgCb5.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartletbottom5.png\";\n\n    let imgCt1 = new Image();\n    imgCt1.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartlettop1.png\";\n    let imgCt2 = new Image();\n    imgCt2.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartlettop2.png\";\n    let imgCt3 = new Image();\n    imgCt3.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartlettop3.png\";\n    let imgCt4 = new Image();\n    imgCt4.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartlettop4.png\";\n    let imgCt5 = new Image();\n    imgCt5.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartlettop5.png\";\n\n    let imgCm1 = new Image();\n    imgCm1.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartletmiddle1.png\";\n    let imgCm2 = new Image();\n    imgCm2.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartletmiddle2.png\";\n    let imgCm3 = new Image();\n    imgCm3.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartletmiddle3.png\";\n    let imgCm4 = new Image();\n    imgCm4.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartletmiddle4.png\";\n    let imgCm5 = new Image();\n    imgCm5.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/chartletmiddle5.png\";\n\n    let imgHelpped = new Image();\n    imgHelpped.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/helpped.png\";\n    let imgWined = new Image();\n    imgWined.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/wined.png\";\n    let imgLosed = new Image();\n    imgLosed.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/losed.png\";\n\n    let imgHelpedBtn = new Image();\n    imgHelpedBtn.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/helped.png\";\n    let imgFlaggedBtn = new Image();\n    imgFlaggedBtn.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/flagged.png\";\n    let imgOpenedBtn = new Image();\n    imgOpenedBtn.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/opened.png\";\n    let imgNextedBtn = new Image();\n    imgNextedBtn.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/nexted.png\";\n    let imgRestartedBtn = new Image();\n    imgRestartedBtn.src =\n      \"https://superjobs.oss-cn-beijing.aliyuncs.com/public/images/restarted.png\";\n\n    setTimeout(() => {\n      imgHelpped = null;\n      imgWined = null;\n      imgLosed = null;\n\n      imgHelpedBtn = null;\n      imgFlaggedBtn = null;\n      imgOpenedBtn = null;\n      imgNextedBtn = null;\n      imgRestartedBtn = null;\n\n      // imgBg1 = null;\n      // imgBg2 = null;\n      // imgBg3 = null;\n      // imgBg4 = null;\n      // imgBg5 = null;\n\n      imgBg1s = null;\n      imgBg2s = null;\n      imgBg3s = null;\n      imgBg4s = null;\n      imgBg5s = null;\n\n      imgCb1 = null;\n      imgCb2 = null;\n      imgCb3 = null;\n      imgCb4 = null;\n      imgCb5 = null;\n\n      imgCt1 = null;\n      imgCt2 = null;\n      imgCt3 = null;\n      imgCt4 = null;\n      imgCt5 = null;\n\n      imgCm1 = null;\n      imgCm2 = null;\n      imgCm3 = null;\n      imgCm4 = null;\n      imgCm5 = null;\n    }, 3000);\n  }, 0);\n}\n\nexport default preloadImages;\n","import getID from \"../utils/getID\";\nimport isMined from \"../utils/isMined\";\nimport getNeighbors from \"./getNeighbors\";\n\nexport default function calculateNeighborMineCounts(board, boardConfig) {\n  const { rows, columns } = boardConfig;\n  let cell,\n    neighborMineCount = 0;\n  for (let row = 0; row < rows; row++) {\n    for (let column = 0; column < columns; column++) {\n      const id = getID(row, column);\n      cell = board[row][column];\n      cell.neighborMineCount = 0;\n      if (!cell.mined) {\n        const neighbors = getNeighbors(id, boardConfig);\n        neighborMineCount = 0;\n        for (let i = 0; i < neighbors.length; i++) {\n          neighborMineCount += isMined(board, neighbors[i]);\n        }\n        cell.neighborMineCount = neighborMineCount;\n      }\n    }\n  }\n  return board;\n}\n","import { BOTTOM_ROWS, MIDDLE_ROWS, TOP_ROWS } from \"../config\";\nimport getRowColumn from \"../utils/getRowColumn\";\n\nfunction handleCellFlag(\n  cell,\n  board,\n  { forceUpdateBoard, boardConfig, flagged }\n) {\n  if (cell.opened || cell.disabled) return;\n\n  board[cell.row][cell.column].flagged = cell.flagged = !cell.flagged;\n  console.log(\"cell\", cell, board);\n  flagged(cell.flagged);\n  forceUpdateBoard();\n}\n\nexport default handleCellFlag;\n","<script>\n  import MineSweeperSvelte from \"./MineSweeper.svelte\";\n</script>\n\n<div>\n  <MineSweeperSvelte mineCount={35} bgs={true} />\n</div>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_current_component","component","get_current_component","Error","beforeUpdate","$$","before_update","push","createEventDispatcher","type","detail","callbacks","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","outro_and_destroy_block","lookup","key","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","set","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","undefined","get_spread_object","spread_props","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","join","id","row","column","opened","flagged","mined","neighborMineCount","disabled","chartleted","gameOver","currentCell","dispatch","selected","formatMineCount","mineCount","flagCount","prewined","helped","getID","Cell","getRandomInteger","min","max","floor","random","getRowColumn","split","getNeighbors","boardConfig","parseInt","neighbors","rows","columns","findCellNeighborsChartleted","cell","board","neighbor","Board","startRow","TOP_ROWS","CELLPX","TOP_MINECOUNT","topBoardConfig","middleBoardConfig","bottomBoardConfig","isMined","handleFirstOpenChartletBoom","positions","regionTopChartletPosition","topLeftPosition","topRightPosition","bottomLeftPosition","moved","handlePlaceChartlet","chartletRows","chartletColumns","handleBoomChartletTop","handleRandomPlaceChartletMiddle","handleRandomPlaceChartletBottom","regionMiddleChartletPosition","handleBoomChartletMiddle","handleRandomPlaceChartletTop","regionBottomChartletPosition","bottomRightPosition","handleBoomChartletBottom","regionChartletPosition","top","left","endRow","endColumn","LAYER22CELLS","LAYERINFOSCELLS","LAYERLOGOCELLS","handleCellOpen","forceUpdateBoard","lose","handleButtonClickNext","console","log","zoom","bgs","boardTop","boardMiddle","boardBottom","flagFirstOpen","losed","wined","showuped","started","refShowup","window","screen","width","err","computedBoard","clicked","play","handleCellClick","unopenedCells","curCellIndex","findIndex","winNoLeftMines","winMarkFlags","preJudgeWin","setTimeout","flag","judgeWin","newGame","handle22Layer","handleInfosLayer","handleLogoLayer","audiojs","events","createAll","imgBg1s","Image","imgBg2s","imgBg3s","imgBg4s","imgBg5s","imgCb1","imgCb2","imgCb3","imgCb4","imgCb5","imgCt1","imgCt2","imgCt3","imgCt4","imgCt5","imgCm1","imgCm2","imgCm3","imgCm4","imgCm5","imgHelpped","imgWined","imgLosed","imgHelpedBtn","imgFlaggedBtn","imgOpenedBtn","imgNextedBtn","imgRestartedBtn","mineCooridinates","cellId","includes","randomlyAssignMines","calculateNeighborMineCounts","handleCellFlag","body"],"mappings":"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"}